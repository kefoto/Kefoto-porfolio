
///TODO: Content still not hidden when the page started
//TODO: styling problem, can not select and drag the drag_e when scrolled, blocked by something that is unselectable

#space {
  height: 10vh;
  position: relative;
  display: flex;
  width: 100%;
  // background-color: red;
}
#container {
  position: relative;
  display: flex;
  --parentHeight: 90vh;
  height: var(--parentHeight);
  height: 90dvh;
  width: 100%;
  // background-color: red;
  // top: 0%;
  overflow: hidden;
  bottom: 0;
  left: 0;

  #drag__e {
    position: absolute;
    /* border: 0px; */
    background-color: black;
    font-size: 2.4em;
    width: 1.8em;
    height: 1.8em;
    transform: translate(-50%, -50%);
    color: white;
    border: 1.2px solid white;
    display: grid;
    top: 50%;
    left: 50%;
    border-radius: 50%;
    padding: 15px;
    z-index: 50;
    cursor: move;
    transition: none;

    &:hover #Layer_1 {
      opacity: 1;
    }
  }
}


#Layer_1 {
  opacity: 0;
  transition: opacity 0.3s ease;
}

.button__menu {
  width: calc(var(--parentHeight) / 2 - 20px); /* Adjust the size as needed */
  height: calc(var(--parentHeight) / 2 - 20px);
  border-radius: 50%;
  border: #242424 solid 1px;
  /* background-color: transparent; */
  color: #242424;
  font-size: 1em;
  display: flex;
  justify-content: center;
  align-items: center;
  position: absolute;
  margin: 1vh 1vw;
  user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  -webkit-user-drag: none;
  // transform: rotate3d(1, 1, 1, 0deg);
  transition: opacity 0.4s ease, background-color 0.3s ease-in-out;
  transform-style: preserve-3d;

  @include mq(1080px) {
    width: calc(var(--parentHeight) / 3 - 20px); /* Adjust the size as needed */
    height: calc(var(--parentHeight) / 3 - 20px);
    font-size: 1.05em;
  }

  @include mq(600px) {
    width: calc(var(--parentHeight) / 4 - 20px); /* Adjust the size as needed */
    height: calc(var(--parentHeight) / 4 - 20px);
    font-size: 1.15em;
  }
}

#abt {
  top: 0;
  left: 0;
  opacity: 1;
}

#dta {
  top: 0;
  right: 0;
  opacity: 1;
}

#fto {
  bottom: 0;
  left: 0;
  opacity: 1;
}

#ptr {
  bottom: 0;
  right: 0;
  opacity: 1;
}

.description__pg {
  width: 100%;
  height: 100vh;
  // opacity: 1;
  // display: flex;
  // background-color: red;
  // flex-direction: column;
  // justify-content: center;
  // align-items: center;
  // flex-wrap: wrap;
  // grid-template-rows: repeat(2, 1fr); // Example grid with 2 rows
  // grid-template-columns: repeat(2, 1fr); // Example grid with 2 columns
  // gap: 10px;
  // background-color: red;
  position: relative;
  margin: auto;

  #data,
  #foto,
  #poster {
    

    @extend .description-section;

    // background-color: red;

    

    img {
      width: auto;
      height: 100%;
      margin: 0 auto;
      z-index: 0;
    }
  }

  a {
    transition: color 0.3s ease;

    &:hover {
      color: navy !important;
    }
  }
}

#about {
  @extend .description-section;
  

  // img {
  //   width: 45%;
  //   height: auto;
  //   margin: 0 auto;
  //   z-index: 0;
  // }
}
// TODO: visibility issue
.description-section {
  width: 100%;
  opacity: 0;
  font-size: 1.2em;
  transition: opacity 0.3s ease-out, visibility 0.3s ease-out;
  display: flex;
  flex-direction: column;
  margin: auto;
  height: 100vh;
  justify-content: center;
  align-items: center;
  -webkit-user-drag: none;
  user-select: none;
  visibility: inherit;
}

#about > *,
#data > *,
#foto > *,
#poster > * {
  // position: absolute;
  // -webkit-user-drag: none;
  // user-select: none;
  visibility: inherit;
}



.h1 {
  font-size: 0.8rem !important;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 8px;
  // border-bottom: 1px solid #ccc;
  // padding-bottom: 8px;

  .title {
    margin: 0;
    order: 1;
  }

  .date {
    height: 100%;
    align-items: center;
    text-align: right;
    // justify-content: center;
    margin: auto 0;
    order: 2;
    font-size: 0.7rem !important;
  }
}


.content p{

      margin-bottom: 15px;

      @include mq(720px) {
        margin-bottom: 12px;
      }

} 
.content p:last-child {
  margin-bottom: 0;
}


.text-box {
  position: absolute;
  width: 65%;
  max-width: 600px;
  top: 50%;
  transform: translate(0, -50%);
  text-align: left;
}

// .text-on-left {
//   position: absolute;
//   top: 50%;
//   transform: translate(0, -50%);
//   text-align: left;
//   // text-align: left;
//   // margin-right: 10px;
// }

.image-on-right {
  position: absolute;
  top: 0;
  left: 50%;
  
  transform: translate(-50%, 0);

  opacity: 0;
}

.image-on-left {
  position: absolute;
  top: 0;
  left: 50%;
  
  transform: translate(-50%, 0);

  opacity: 0;
}

.hoverable-letter {
  font-size: 1.1em;
}

.physicCircle img {
  width: 80%;
  height: auto;
  margin: auto;
  // user-select: none;
  -webkit-user-drag: none;
}

.physicCircle {
  background-color: white;
  border-radius: 50%;
  border: 1.5px solid black;
  width: 80px;
  height: 80px;
  display: flex;
  position: absolute;
  /* align-items: center;
  justify-content: center; */
  user-select: none;
  transform: translate(-50%, -50%);
  z-index: 2;

  @include mq(520px) {
    width: 60px;
    height: 60px;
  }
  /* transition: opacity 0.3s ease, visibility 0.5s ease; */
}

#physicCircleContainer > * {
  visibility: inherit;
}

#physicCircleContainer {
  /* background-color: red; */
  /* justify-content: space-around; */
  /* align-items: center; */
  height: 100%;
  width: 45%;
  position: absolute;
  left: 0;
  top: 0;
  opacity: 0;
  /* z-index: ; */
  /* background-color: green; */
  /* overflow: hidden; */
  transition: opacity 0.3s ease, visibility 0.3s ease;
  visibility: inherit;
}

#enter {
  position: fixed;
  bottom: 8px;
  left: 50%;

  text-align: center;
  user-select: none;
  opacity: 0;
  visibility: inherit;
  transition: opacity 0.3s ease, visibility 0.3s ease;
}

#enter:hover {
  opacity: 0.85 !important;
}

#arrow {
  width: 5vw;
  height: 5vh;
  min-width: 30px;
  min-height: 30px;
  transition: transform 0.2s ease-out;

  transform: translate(-50%, 0%) scale(0.8); /* Optional: Smooth transition for the rotation */
}

#arrow.active {
  transform: translate(-50%, 0%) scale(1) rotate(0deg) !important;
}
